FORMAT: 1A
HOST: https://localhost:8080/

# HouseMate API

HouseMate is a web API that allows users to view and create posts for renting houses and appartaments.

##  Posts Collection [/posts]

### List All Posts [GET]

This method returns a JSON containing the whole collection of posts.
The field app_id represents the unique identifier for each post.
The field location provides helpful information to the client so that
it can fetch easily a specific post.

+ Response 200 (application/json)

        [
            {
                "_id":"628099dc6824befa6e372e2a",
                "title":"annuncio",
                "app_id":1,
                "location":"/api/v1/posts/1"
            },
            {
                "_id":"62809a9b6824befa6e372e2b",
                "title":"annuncio_prova",
                "app_id":2,
                "location":"/api/v1/posts/2"
            },
            {
                "_id":"62809b246824befa6e372e2d",
                "title":"annuncio_prova",
                "app_id":3,
                "location":"/api/v1/posts/3"
            }
        ]
        
### Delete All Posts [DELETE]
Clearing the list is not allowed.
+ Response 405 (application/json)

            {
                "Method Not Allowed"
            }

### Put A List Of Posts [PUT]
This method is not allowed.
The list is already updated by the insertions and deletions
performed by the users.
+ Response 405 (application/json)

            {
                "Method Not Allowed"
            }

### Single Post [/post/:id]        
        
### Fetch one post [GET]
This method fetches a post by its app_id.
+ Response 200 (application/json)

        {
            "_id":"628099dc6824befa6e372e2a",
            "title":"annuncio",
            "app_id":1
        }

### Create a New Listing [POST]
+ Request (application/json)

        {
            "title": "Stanza singola per studenti"
        }
+ Response 201 (application/json)

        {
            "_id":"628099dc6824befa6e372e2a",
            "title":"annuncio",
            "app_id":1
        }


            
##  User Collection [/users]

### Registration [POST]

This method allows to add an user

+ Request (application/json)

        {
            "email": "prova@prova.com"
            "password": "ASecurePassword"
        }

+ Response 200 (application/json)

        {
            "success": true
            "message": "User created!"
            "token": "628099dc6824bsadefa6e372e2a" 
            "email": "prova@prova.com"
            "id": "628240wq213258274ea229984ddee"
            "self": "api/v1/628240258274ea229984ddee"

        }